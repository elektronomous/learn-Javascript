= Primive Types on JavaScript:
    [0] Number          => Numeric
    [1] String          => Text, Words
    [2] Boolean         => True or False
    [3] Null            => 
    [4] Undefined

= You can store a data in JavaScript in form of Primitive Type.

._._._._._._._._._._._._
|_ JAVASCRIPT CONSOLE _|
.\____________________/.

= To open the console, first open your chrome.
= On mac, command + option + J to show the console.
= Usually the console is used to debugging the code, or trying some test
  to the code.
  
._._._._._._._._._._._.
|_ JAVASCRIPT NUMBER _|
.\___________________/.

= JavaScript's has one Number type that's called Number. It consist of:
  [=] Positive Number(0, 1, 2, 3... 100, 50000, so on).
  [=] Negative Number(-1, -2, -3, -4, ... -99999, so on).
  [=] Whole Number(integer)
  [=] Decimal Number(float)

= In JavaScript you could do simple operations
    
        50 + 50             // => 100: Addition
        90 - 1              // => 89: Substraction
        111 * 7             // => 777: Multiplication
        400/25              // => 16: Division
        100 % 5             // => 0: Modulation

._._._._._._._._._._._._._._._.
|_ JAVASCRIPT NaN & Infinity _|
.\___________________________/.

= NaN stands for Not a Number in JavaScript.
  = It's considered a numeric value that represents something that is not a number.
= You can create a NaN value by:

        0/0                 // => NaN
        1 + NaN             // => NaN


._._._._._._._._._._
|_ Variable & Let _|
.\________________/.

= Variables are like "labeled jars" for a value in JavaScript.
= We can store a value and give it a name, so that we can
  [=] recall it
  [=] use it
  [=] change it later on.
  [=] pass it to something.
= To create a variable in JavaScript, you using let keyword;

        let someName = value;
